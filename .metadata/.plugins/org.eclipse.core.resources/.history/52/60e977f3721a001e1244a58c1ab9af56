
package it.tripagency_capstone_epicode.entity;

import java.sql.Date;
import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import com.github.javafaker.Faker;

@Entity
@Table(name="users")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class User {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long idUser;
    private String name;
    private String cognome;
    private String email;
    private String password;
    private Date data_nascita;
    
    @OneToMany (mappedBy="user")
    private List<Prenotazione>prenotazioni;
    @OneToMany(mappedBy = "user")
    private List<Recensione> recensioni;
    
    public User(Long idUser, String name, String cognome, String email, String password, Date data_nascita) {
        this.idUser = idUser;
        this.name = name;
        this.cognome = cognome;
        this.email = email;
        this.password = password;
        this.data_nascita = data_nascita;
    }

    public static User createRandomUser() {
    	Faker faker = new Faker();
        Long idUser = faker.number().randomNumber();
        String name = faker.name().firstName();
        String cognome = faker.name().lastName();
        String email = faker.internet().emailAddress();
        String password = faker.internet().password();
        java.util.Date utilDate = faker.date().birthday();
        java.sql.Date dataNascita = new java.sql.Date(utilDate.getTime());

        return new User(idUser, name, cognome, email, password, dataNascita);
    }
    
}
