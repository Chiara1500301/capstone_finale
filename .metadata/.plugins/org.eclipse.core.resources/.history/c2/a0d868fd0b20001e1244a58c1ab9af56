package it.tripagency_capstone_epicode.entity;
import java.time.LocalDate;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "prenotazioni")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Prenotazioni {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "utente_id", referencedColumnName = "id")
    private Utenti utente;

    @ManyToOne
    @JoinColumn(name = "pacchetto_id", referencedColumnName = "id")
    private Pacchetto pacchetto;

    private LocalDate dataInizio;
    private LocalDate dataFine;
    private int numeroPersone;
    private double costoTotale;

    public boolean isPacchettoDisponibile() {
        return pacchetto.getDisponibilitaMassima() > 0;
    }

    public void prenotaPacchetto() {
        if (isPacchettoDisponibile()) {
            pacchetto.setDisponibilitaMassima(pacchetto.getDisponibilitaMassima() - 1);
        }
    }
}
